{"version":3,"file":"loco-model.js","mappings":"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","sources":["webpack://LocoModel/webpack/universalModuleDefinition","webpack://LocoModel/webpack/bootstrap","webpack://LocoModel/webpack/runtime/define property getters","webpack://LocoModel/webpack/runtime/hasOwnProperty shorthand","webpack://LocoModel/webpack/runtime/make namespace object","webpack://LocoModel/./src/config.js","webpack://LocoModel/./src/i18n.js","webpack://LocoModel/./src/locales/en.coffee","webpack://LocoModel/./src/IdentityMap.js","webpack://LocoModel/./src/validators/base.coffee","webpack://LocoModel/./src/validators/absence.coffee","webpack://LocoModel/./src/validators/confirmation.coffee","webpack://LocoModel/./src/validators/exclusion.coffee","webpack://LocoModel/./src/validators/format.coffee","webpack://LocoModel/./src/validators/inclusion.coffee","webpack://LocoModel/./src/validators/length.coffee","webpack://LocoModel/./src/validators/numericality.coffee","webpack://LocoModel/./src/validators/presence.coffee","webpack://LocoModel/./src/validators/size.coffee","webpack://LocoModel/./src/validators.js","webpack://LocoModel/./src/helpers/obj.js","webpack://LocoModel/./src/base.coffee","webpack://LocoModel/./src/helpers/connectivity.js","webpack://LocoModel/./src/models.js","webpack://LocoModel/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LocoModel\"] = factory();\n\telse\n\t\troot[\"LocoModel\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class Configurator {\n  constructor() {\n    this.localeVar = \"en\";\n    this.protocolWithHostVar = null;\n    this.scopeVar = null;\n  }\n\n  get locale() {\n    return this.localeVar;\n  }\n\n  set locale(val) {\n    this.localeVar = val;\n  }\n\n  get protocolWithHost() {\n    return this.protocolWithHostVar;\n  }\n\n  set protocolWithHost(val) {\n    if (!val) {\n      this.protocolWithHostVar = null;\n    } else if (val[val.length - 1] === \"/\") {\n      this.protocolWithHostVar = val.slice(0, val.length - 1);\n    } else {\n      this.protocolWithHostVar = val;\n    }\n  }\n\n  get scope() {\n    return this.scopeVar;\n  }\n\n  set scope(val) {\n    this.scopeVar = val;\n  }\n}\n\nconst Config = new Configurator();\n\nexport default Config;\n","import en from \"./locales/en.coffee\";\n\nconst I18n = {\n  en,\n};\n\nexport default I18n;\n","en =\n  variants: {}\n  models: {}\n  attributes: {}\n  errors:\n    messages:\n      accepted: \"must be accepted\"\n      blank: \"can't be blank\"\n      confirmation: \"doesn't match %{attribute}\"\n      empty: \"can't be empty\"\n      equal_to: \"must be equal to %{count}\"\n      even: \"must be even\"\n      exclusion: \"is reserved\"\n      greater_than: \"must be greater than %{count}\"\n      greater_than_or_equal_to: \"must be greater than or equal to %{count}\"\n      inclusion: \"is not included in the list\"\n      invalid: \"is invalid\"\n      less_than: \"must be less than %{count}\"\n      less_than_or_equal_to: \"must be less than or equal to %{count}\"\n      not_a_number: \"is not a number\"\n      not_an_integer: \"must be an integer\"\n      odd: \"must be odd\"\n      present: \"must be blank\"\n      too_long:\n        one: \"is too long (maximum is 1 character)\"\n        other: \"is too long (maximum is %{count} characters)\"\n      too_short:\n        one: \"is too short (minimum is 1 character)\"\n        other: \"is too short (minimum is %{count} characters)\"\n      wrong_length:\n        one: \"is the wrong length (should be 1 character)\"\n        other: \"is the wrong length (should be %{count} characters)\"\n      other_than: \"must be other than %{count}\"\n\nexport default en","/*\nEx.\nimap = {\n  Post: {\n    1: [\n      #<Post id:1>\n    ],\n    10: [\n      #<Post id:10>, #<PostView>\n    ],\n    collection: [\n      #<PostsView>\n    ]\n  }\n}\n*/\nlet imap = {};\n\nconst findPosition = (arr) => {\n  let idx = arr.length;\n  arr.find((element, index) => {\n    if (element === null) {\n      idx = index;\n      return true;\n    }\n  });\n  return idx;\n};\n\nconst addToImap = (arr, obj) => {\n  if (arr.indexOf(obj) !== -1) return null;\n  const idx = findPosition(arr);\n  arr[idx] = obj;\n  return idx;\n};\n\nconst connect = (obj, opts = {}) => {\n  const model = opts.with;\n  add(model);\n  const arr = imap[model.getIdentity()][model.id];\n  return addToImap(arr, obj);\n};\n\nconst addCollection = (identity, opts = {}) => {\n  if (imap[identity] === undefined) imap[identity] = {};\n  if (imap[identity][\"collection\"] === undefined)\n    imap[identity][\"collection\"] = [];\n  const arr = imap[identity][\"collection\"];\n  return addToImap(arr, opts.to);\n};\n\nconst subscribe = (args) => {\n  const forExistingElement = () => {};\n  if (typeof args.to === \"object\") {\n    const idx = connect(args.with, { with: args.to });\n    if (idx === null) return forExistingElement;\n    return () => {\n      unsubscribe(args.to.getIdentity(), args.to.id, idx);\n    };\n  } else if (typeof args.to === \"function\") {\n    const idx = addCollection(args.to.getIdentity(), {\n      to: args.with,\n    });\n    if (idx === null) return forExistingElement;\n    return () => {\n      unsubscribe(args.to.getIdentity(), \"collection\", idx);\n    };\n  }\n};\n\nconst unsubscribe = (identity, id, idx) => {\n  if (imap?.[identity]?.[id]?.[idx] !== undefined) {\n    imap[identity][id][idx] = null;\n  }\n};\n\nconst add = (obj) => {\n  const identity = obj.getIdentity();\n  if (imap[identity] === undefined) imap[identity] = {};\n  if (imap[identity][obj.id] === undefined) imap[identity][obj.id] = [];\n  imap[identity][obj.id][0] = obj;\n};\n\nconst find = (klass, id) => {\n  return imap[klass] !== undefined && imap[klass][id] != undefined\n    ? imap[klass][id][0]\n    : null;\n};\n\nconst findConnected = (klass, id) => {\n  if (\n    imap[klass] !== undefined &&\n    imap[klass][id] !== undefined &&\n    imap[klass][id].length > 1\n  ) {\n    return imap[klass][id].slice(1);\n  } else {\n    return [];\n  }\n};\n\nexport default {\n  get imap() {\n    return imap;\n  },\n  clear: () => (imap = {}),\n  subscribe,\n  unsubscribe,\n  add,\n  find,\n  findConnected,\n};\n","import Validators from '../validators'\n\nclass Base\n  @sharedInstances = {}\n\n  @instance: (obj, attr, opts) ->\n    validatorName = @identity\n    if not @sharedInstances[validatorName]?\n      @sharedInstances[validatorName] = new Validators[validatorName]\n    sharedInstance = @sharedInstances[validatorName]\n    sharedInstance.assignAttribs obj, attr, opts\n    return sharedInstance\n\n  constructor: ->\n    @obj = null\n    @attr = null\n    @val = null\n    @opts = null\n\n  assignAttribs: (obj, attr, opts) ->\n    @obj = obj\n    @attr = attr\n    @val = @obj[@attr]\n    @opts = opts\n\nexport default Base","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Absence extends Base\n  @identity = \"Absence\"\n\n  constructor: -> super()\n\n  validate: ->\n    switch typeof @val\n      when 'string'\n        return if @val? and @val.length is 0\n      else\n        return if not @val?\n    this._addErrorMessage()\n\n  _addErrorMessage: ->\n    message = if @opts.message?\n      @opts.message\n    else\n      I18n[Config.locale].errors.messages.present\n    @obj.addErrorMessage message, for: @attr\n\nexport default Absence","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Confirmation extends Base\n  @identity = \"Confirmation\"\n\n  constructor: -> super()\n\n  validate: ->\n    properVal = @obj[this._properAttr()]\n    return if @val? and properVal? and @val is properVal\n    this._addErrorMessage()\n\n  _addErrorMessage: ->\n    defaultAttrName = @attr.charAt(0).toUpperCase() + @attr.slice(1)\n    attrNames = I18n[Config.locale].attributes[@obj.getIdentity()]\n    attrName = (attrNames and attrNames[@attr]) || defaultAttrName\n    message = if @opts.message?\n      @opts.message\n    else\n      I18n[Config.locale].errors.messages.confirmation\n    message = message.replace '%{attribute}', attrName\n    @obj.addErrorMessage message, for: this._properAttr()\n\n  _properAttr: -> \"#{@attr}Confirmation\"\n\nexport default Confirmation","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Exclusion extends Base\n  @identity = \"Exclusion\"\n\n  constructor: -> super()\n\n  validate: ->\n    set = @opts.in or @opts.within or []\n    return if set.indexOf(@val) is -1\n    this._addErrorMessage()\n\n  _addErrorMessage: ->\n    message = if @opts.message?\n      @opts.message\n    else\n      I18n[Config.locale].errors.messages.exclusion\n    @obj.addErrorMessage message, for: @attr\n\nexport default Exclusion","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Format extends Base\n  @identity = \"Format\"\n\n  constructor: -> super()\n\n  validate: ->\n    match = @opts.with.exec @val\n    return if match?\n    this._addErrorMessage()\n\n  _addErrorMessage: ->\n    message = if @opts.message?\n      @opts.message\n    else\n      I18n[Config.locale].errors.messages.invalid\n    @obj.addErrorMessage message, for: @attr\n\nexport default Format","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Inclusion extends Base\n  @identity = \"Inclusion\"\n\n  constructor: -> super()\n\n  validate: ->\n    set = @opts.in or @opts.within or []\n    return if set.indexOf(@val) isnt -1\n    this._addErrorMessage()\n\n  _addErrorMessage: ->\n    message = if @opts.message?\n      @opts.message\n    else\n      I18n[Config.locale].errors.messages.inclusion\n    @obj.addErrorMessage message, for: @attr\n\nexport default Inclusion","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Length extends Base\n  @identity = \"Length\"\n\n  constructor: -> super()\n\n  validate: ->\n    return if not @val?\n    message = if this._range()[0]? and this._range()[1]? and this._range()[0] is this._range()[1] and @val.length isnt this._range()[0]\n      this._selectErrorMessage 'wrong_length', this._range()[0]\n    else if this._range()[0]? and @val.length < this._range()[0]\n      this._selectErrorMessage 'too_short', this._range()[0]\n    else if this._range()[1]? and @val.length > this._range()[1]\n      this._selectErrorMessage 'too_long', this._range()[1]\n    else\n      null\n    return if message is null\n    @obj.addErrorMessage message, for: @attr\n\n  _range: ->\n    from = @opts.minimum or @opts.is or (@opts.within? and @opts.within[0]) or null\n    to = @opts.maximum or @opts.is or (@opts.within? and @opts.within[1]) or null\n    [from, to]\n\n  _selectErrorMessage: (msg, val) ->\n    if val is 1\n      return I18n[Config.locale].errors.messages[msg].one\n    message = null\n    for variant in ['few', 'many']\n      if this._checkVariant variant, val\n        message = I18n[Config.locale].errors.messages[msg][variant]\n        break\n    if not message?\n      message = I18n[Config.locale].errors.messages[msg].other\n    if @opts.message?\n      message = @opts.message\n    if /%{count}/.exec message\n      message = message.replace '%{count}', val\n    message\n\n  _checkVariant: (variant, val) ->\n    return if not I18n[Config.locale].variants[variant]?\n    I18n[Config.locale].variants[variant] val\n\nexport default Length","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Numericality extends Base\n  @identity = \"Numericality\"\n\n  constructor: -> super()\n\n  validate: ->\n    if isNaN @val\n      this._addNaNErrorMessage()\n    else if @opts.only_integer? and Number(@val) isnt parseInt(@val)\n      this._addIntErrorMessage()\n    else if @opts.greater_than? and Number(@val) <= @opts.greater_than\n      this._addGreatherThanErrorMessage()\n    else if @opts.greater_than_or_equal_to? and Number(@val) < @opts.greater_than_or_equal_to\n      this._addGreatherThanOrEqualToErrorMessage()\n    else if @opts.equal_to? and Number(@val) isnt @opts.equal_to\n      this._addEqualToErrorMessage()\n    else if @opts.less_than? and Number(@val) >= @opts.less_than\n      this._addLessThanErrorMessage()\n    else if @opts.less_than_or_equal_to? and Number(@val) > @opts.less_than_or_equal_to\n      this._addLessThanOrEqualToErrorMessage()\n    else if @opts.other_than? and Number(@val) is @opts.other_than\n      this._addOtherThanErrorMessage()\n    else if @opts.odd? and Number(@val) % 2 isnt 1\n      this._addOddErrorMessage()\n    else if @opts.even? and Number(@val) % 2 isnt 0\n      this._addEvenErrorMessage()\n\n  _addNaNErrorMessage: ->\n    message = if @opts.message?\n      @opts.message\n    else\n      I18n[Config.locale].errors.messages.not_a_number\n    @obj.addErrorMessage message, for: @attr\n\n  _addIntErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.not_an_integer\n    @obj.addErrorMessage message, for: @attr\n\n  _addGreatherThanErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.greater_than\n    message = message.replace '%{count}', @opts.greater_than\n    @obj.addErrorMessage message, for: @attr\n\n  _addGreatherThanOrEqualToErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.greater_than_or_equal_to\n    message = message.replace '%{count}', @opts.greater_than_or_equal_to\n    @obj.addErrorMessage message, for: @attr\n\n  _addEqualToErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.equal_to\n    message = message.replace '%{count}', @opts.equal_to\n    @obj.addErrorMessage message, for: @attr\n\n  _addLessThanErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.less_than\n    message = message.replace '%{count}', @opts.less_than\n    @obj.addErrorMessage message, for: @attr\n\n  _addLessThanOrEqualToErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.less_than_or_equal_to\n    message = message.replace '%{count}', @opts.less_than_or_equal_to\n    @obj.addErrorMessage message, for: @attr\n\n  _addOtherThanErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.other_than\n    message = message.replace '%{count}', @opts.other_than\n    @obj.addErrorMessage message, for: @attr\n\n  _addOddErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.odd\n    @obj.addErrorMessage message, for: @attr\n\n  _addEvenErrorMessage: ->\n    message = I18n[Config.locale].errors.messages.even\n    @obj.addErrorMessage message, for: @attr\n\nexport default Numericality","import Base from './base.coffee'\nimport I18n from '../i18n'\nimport Config from '../config'\n\nclass Presence extends Base\n  @identity = \"Presence\"\n\n  constructor: -> super()\n\n  validate: ->\n    switch typeof @val\n      when 'string'\n        return if @val? and @val.length > 0\n      else\n        return if @val?\n    this._addErrorMessage()\n\n  _addErrorMessage: ->\n    message = if @opts.message?\n      @opts.message\n    else\n      I18n[Config.locale].errors.messages.blank\n    @obj.addErrorMessage message, for: @attr\n\nexport default Presence","import Base from './base.coffee'\nimport Length from './length.coffee'\n\nclass Size extends Base\n  @identity = \"Size\"\n\n  constructor: -> super()\n\n  validate: -> Length.instance(@obj, @attr, @opts).validate()\n\nexport default Size","import Absence from \"./validators/absence.coffee\";\nimport Base from \"./validators/base.coffee\";\nimport Confirmation from \"./validators/confirmation.coffee\";\nimport Exclusion from \"./validators/exclusion.coffee\";\nimport Format from \"./validators/format.coffee\";\nimport Inclusion from \"./validators/inclusion.coffee\";\nimport Length from \"./validators/length.coffee\";\nimport Numericality from \"./validators/numericality.coffee\";\nimport Presence from \"./validators/presence.coffee\";\nimport Size from \"./validators/size.coffee\";\n\nconst Validators = {\n  Absence,\n  Base,\n  Confirmation,\n  Exclusion,\n  Format,\n  Inclusion,\n  Length,\n  Numericality,\n  Presence,\n  Size,\n};\n\nexport default Validators;\n","export const toURIParams = (obj) => {\n  let str = \"\";\n  Object.keys(obj).forEach((key) => {\n    if (str !== \"\") str = `${str}&`;\n    str = `${str}${key}=${encodeURIComponent(obj[key])}`;\n  });\n  return str;\n};\n\nexport default toURIParams;\n","import Validators from './validators'\nimport Config from './config'\nimport IdentityMap from './IdentityMap'\nimport { sendReq } from './helpers/connectivity';\n\nclass Base\n  @getIdentity: -> if this.identity? then this.identity else throw(\"Specify Model's identity!\")\n\n  @getRemoteName: -> if this.remoteName? then this.remoteName else this.getIdentity()\n\n  @all: (opts = {}) -> this.get \"all\", opts\n  @get: (action, opts = {}) -> this.__send \"GET\", action, opts\n  @post: (action, opts = {}) -> this.__send \"POST\", action, opts\n  @put: (action, opts = {}) -> this.__send \"PUT\", action, opts\n  @patch: (action, opts = {}) -> this.__send \"PATCH\", action, opts\n  @delete: (action, opts = {}) -> this.__send \"DELETE\", action, opts\n\n  @find: (idOrObj) ->\n    urlParams = {}\n    if typeof idOrObj is \"object\"\n      urlParams = idOrObj\n      id = idOrObj.id\n      delete urlParams.id\n    else\n      id = idOrObj\n    url = \"#{this.__getResourcesUrl(urlParams)}/#{id}\"\n    req = sendReq('GET', url, urlParams, this.__requestOpts())\n    return new Promise (resolve, reject) =>\n      req.onerror = (e) -> reject(e)\n      req.onload = (e) =>\n        if e.target.status is 404\n          resolve(null)\n          return\n        record = JSON.parse(e.target.response)\n        resolve(this.__initFromJSON(record, idOrObj.resource))\n\n  @getAttribRemoteName: (attrib) ->\n    return null if not this.attributes?\n    return null if not this.attributes[attrib]?\n    return attrib if not this.attributes[attrib].remoteName?\n    this.attributes[attrib].remoteName\n\n  @getResourcesUrlParams: (opts) ->\n    url = this.__getResourcesUrl(resource: opts.resource)\n    regexp = /:(\\w+)\\/?/\n    params = []\n    while match = regexp.exec url\n      params.push match[1]\n      url = url.replace match[0], match[1]\n    params\n\n  @__getResourcesUrl: (opts) ->\n    resourcesUrl = if not this.resources?\n      \"/#{this.getRemoteName().toLowerCase()}s\"\n    else if opts.resource\n      this.resources[opts.resource].url\n    else if Config.scope? and this.resources[Config.scope]?\n      this.resources[Config.scope].url\n    else\n      this.resources.url\n    if this.protocolWithHost?\n      resourcesUrl = \"#{this.protocolWithHost}#{resourcesUrl}\"\n    else if Config.protocolWithHost?\n      resourcesUrl = \"#{Config.protocolWithHost}#{resourcesUrl}\"\n    match = /:([a-zA-Z]+)\\/?/.exec(resourcesUrl)\n    return resourcesUrl if not match?\n    if opts[match[1]]?\n      resourcesUrl = resourcesUrl.replace(\":#{match[1]}\", opts[match[1]])\n      delete opts[match[1]]\n    else if opts.obj? and opts.obj[match[1]]?\n      resourcesUrl = resourcesUrl.replace(\":#{match[1]}\", opts.obj[match[1]])\n    return resourcesUrl\n\n  @__requestOpts: () ->\n    {\n      authorizationHeader: Config.authorizationHeader || this.authorizationHeader,\n      cookiesByCORS: if this.cookiesByCORS? then this.cookiesByCORS else Config.cookiesByCORS\n    }\n\n  @__page: (i, pageData, resp) ->\n    url = pageData.url\n    pageData.params[pageData.pageParam] = i\n    req = sendReq pageData.method, url, pageData.params, this.__requestOpts()\n    return new Promise (resolve, reject) =>\n      req.onerror = (e) -> reject e\n      req.onload = (e) =>\n        data = JSON.parse e.target.response\n        if data.constructor is Array\n          for record in data\n            obj = this.__initFromJSON record, pageData.resource\n            resp.push obj\n        else if data.resources?\n          if resp.constructor is Array\n            resp = {resources: [], count: 0}\n          for record in data.resources\n            obj = this.__initFromJSON record, pageData.resource\n            resp.resources.push obj\n          resp.count = data.count\n        else\n          for key, val of data\n            resp[key] = val\n        resolve resp\n\n  @__paginate: (opts) ->\n    pageData = {\n      method: opts.method,\n      url: opts.url,\n      params: opts.params,\n      pageParam: opts.pageParam,\n      resource: opts.resource\n    }\n    this.__page(opts.pageNum || 1, pageData, []).then (data) =>\n      total = data.count || opts.total\n      promise = Promise.resolve data\n      return promise if opts.pageNum?\n      return promise if total <= opts.perPage\n      max = parseInt total / opts.perPage\n      max += 1 if max isnt total / opts.perPage\n      return promise if max is 1\n      for i in [2..max]\n        func = (i) =>\n          promise = promise.then (_) =>\n            return this.__page i, pageData, data\n        func i\n      return promise\n\n  @__getPaginationParam: (resource) ->\n    defaultParam = 'page'\n    if resource? and this.resources? and this.resources[resource]\n      return this.resources[resource].paginate?.param || defaultParam\n    if Config.scope? and this.resources? and this.resources[Config.scope]?\n      param = this.resources[Config.scope]?.paginate?.param\n      return param || defaultParam\n    if this.resources?.paginate?.param?\n      return this.resources.paginate.param\n    defaultParam\n\n  @__getPaginationPer: (resource) ->\n    if resource? and this.resources? and this.resources[resource]\n      return this.resources[resource].paginate?.per\n    if Config.scope? and this.resources? and this.resources[Config.scope]?\n      return this.resources[Config.scope]?.paginate?.per\n    if this.resources?.paginate?.per?\n      return this.resources.paginate.per\n    null\n\n  @__send: (method, action, opts) ->\n    url = this.__getResourcesUrl opts\n    if action isnt \"all\"\n      url = \"#{url}/#{action}\"\n    data = {\n      method: method,\n      url: url,\n      params: opts,\n      resource: opts.resource,\n      perPage: this.__getPaginationPer(opts.resource),\n      pageNum: opts.page,\n      pageParam: this.__getPaginationParam(opts.resource),\n      total: opts.total || opts.count\n    }\n    this.__paginate data\n\n  @__initFromJSON: (record, resource) ->\n    obj = new this(record)\n    obj.resource = resource\n    IdentityMap.add obj\n    obj\n\n  constructor: (data = {}) ->\n    this.id = null\n    this.errors = null\n    this.resource = data.resource\n    this.__initAttributes() if this.constructor.attributes?\n    this.__assignAttributes(data) if data?\n\n  setResource: (name) -> this.resource = name\n\n  getIdentity: -> this.constructor.getIdentity()\n\n  getAttrRemoteName: (attr) ->\n    return null if not this.constructor.attributes?\n    return null if not this.constructor.attributes[attr]?\n    this.constructor.attributes[attr].remoteName or attr\n\n  getAttrName: (remoteName) ->\n    return remoteName if not this.constructor.attributes?\n    return remoteName if this.constructor.attributes[remoteName]?\n    for name, config of this.constructor.attributes\n      if config.remoteName is remoteName\n        return name\n    remoteName\n\n  getAttrType: (attrName) ->\n    return null if not this.constructor.attributes?\n    return null if not this.constructor.attributes[attrName]?\n    this.constructor.attributes[attrName].type\n\n  assignAttr: (attrName, val) ->\n    attrType = this.getAttrType attrName\n    if not val?\n      this[attrName] = null\n      return\n    switch attrType\n      when \"Date\" then val = new Date Date.parse val\n      when \"Integer\", \"Int\" then val = parseInt val\n      when \"Float\" then val = parseFloat val\n      when \"Boolean\", \"Bool\"\n        val = if typeof val is 'boolean'\n          val\n        else\n          Boolean parseInt val\n      when \"Number\" then val = Number val\n      when \"String\" then val = String val\n    this[attrName] = val\n\n  attributes: ->\n    attribs = {id: this.id}\n    return attribs if not this.constructor.attributes?\n    for name, _ of this.constructor.attributes\n      attribs[name] = this[name]\n    attribs\n\n  isValid: ->\n    return true if not this.constructor.attributes?\n    this.errors = null\n    for name, config of this.constructor.attributes\n      continue if not config.validations?\n      for validationName, validationSettings of config.validations\n        continue if this.id? and validationSettings.on is \"create\"\n        continue if !this.id? and validationSettings.on is \"update\"\n        continue if validationSettings.if? and !validationSettings.if(this)\n        validator = validationName.charAt(0).toUpperCase() + validationName.slice(1)\n        if not Validators[validator]?\n          console.warn \"\\\"#{validator}\\\" validator is not implemented!\"\n          continue\n        pvs = this.__processedValidationSettings validationSettings\n        Validators[validator].instance(this, name, pvs).validate()\n    if this.constructor.validate?\n      this[meth]() for meth in this.constructor.validate\n    !this.errors?\n\n  isInvalid: -> !this.isValid()\n\n  isEmpty: ->\n    for name, val of this.attributes()\n      return false if this[name] isnt null\n    true\n\n  addErrorMessage: (message, opts = {}) ->\n    this.errors = {} if not this.errors?\n    this.errors[opts.for] = [] if not this.errors[opts.for]?\n    this.errors[opts.for].push message\n\n  save: ->\n    httpMeth = if this.id? then \"PUT\" else \"POST\"\n    req = sendReq httpMeth, this.__getResourceUrl(), this.serialize(), this.constructor.__requestOpts()\n    return new Promise (resolve, reject) =>\n      req.onerror = (e) -> reject e\n      req.onload = (e) =>\n        data = JSON.parse e.target.response\n        if data.success\n          resolve data\n          return\n        this.__assignRemoteErrorMessages(data.errors) if data.errors?\n        resolve data\n\n  updateAttribute: (attr) ->\n    req = sendReq 'PUT', this.__getResourceUrl(), this.serialize(attr), this.constructor.__requestOpts()\n    return new Promise (resolve, reject) =>\n      req.onerror = (e) -> reject e\n      req.onload = (e) =>\n        if e.target.status >= 200 and e.target.status < 400\n          data = JSON.parse e.target.response\n          if data.success\n            resolve data\n            return\n          this.__assignRemoteErrorMessages(data.errors) if data.errors?\n          resolve data\n        else if e.target.status >= 500\n          reject e\n\n  serialize: (attr = null) ->\n    return {} if not this.constructor.attributes?\n    hash = {}\n    mainKey = this.constructor.getRemoteName().toLowerCase()\n    hash[mainKey] = {}\n    attribs = {}\n    if attr?\n      attribs[attr] = null\n    else\n      attribs = this.constructor.attributes\n    for attr, _ of attribs\n      remoteName = this.getAttrRemoteName attr\n      hash[mainKey][remoteName] = this[attr]\n    hash\n\n  reload: ->\n    findParams = {id: this.id, resource: this.resource}\n    for param in this.constructor.getResourcesUrlParams(resource: this.resource)\n      findParams[param] = this[param]\n    this.constructor.find findParams\n\n  changes: ->\n    result = {}\n    currentObj = IdentityMap.find this.getIdentity(), this.id\n    for name, val of this.attributes()\n      if val isnt currentObj[name]\n        continue if val? and val.constructor is Date and currentObj[name] - val is 0\n        result[name] = {is: currentObj[name], was: val} if val isnt currentObj[name]\n    return result\n\n  applyChanges: -> this[name] = vals.is for name, vals of this.changes()\n\n  toKey: -> \"#{this.getIdentity().toLowerCase()}_#{this.id}\"\n\n  get: (action, data = {}) -> this.__send \"GET\", action, data\n  post: (action, data = {}) -> this.__send \"POST\", action, data\n  put: (action, data = {}) -> this.__send \"PUT\", action, data\n  patch: (action, data = {}) -> this.__send \"PATCH\", action, data\n  delete: (action, data = {}) -> this.__send \"DELETE\", action, data\n\n  __send: (method, action, data) ->\n    url = this.__getResourceUrl()\n    if action?\n      url = \"#{url}/#{action}\"\n    req = sendReq method, url, data, this.constructor.__requestOpts()\n    return new Promise (resolve, reject) ->\n      req.onerror = (e) -> reject e\n      req.onload = (e) ->\n        if e.target.status >= 200 and e.target.status < 400\n          data = JSON.parse e.target.response\n          resolve data\n        else if e.target.status >= 500\n          reject e\n\n  __assignAttributes: (data) ->\n    for key, val of data\n      attrName = this.getAttrName key\n      this.assignAttr attrName, val\n\n  __initAttributes: ->\n    for name, config of this.constructor.attributes\n      this[name] = null\n\n  __assignRemoteErrorMessages: (remoteErrors) ->\n    for remoteName, errors of remoteErrors\n      attr = this.getAttrName remoteName\n      for error in errors\n        this.addErrorMessage error, for: attr\n\n  __getResourceUrl: ->\n    url = this.constructor.__getResourcesUrl resource: this.resource, obj: this\n    return url if not this.id?\n    \"#{url}/#{this.id}\"\n\n  __processedValidationSettings: (validationSettings) ->\n    res = {}\n    for confName, confVal of validationSettings\n      if typeof confVal is 'function'\n        res[confName] = confVal this\n      else\n        res[confName] = confVal\n    res\n\nexport default Base","import { toURIParams } from \"./obj\";\n\nconst filterParams = (data) => {\n  const params = {};\n  if (!data) return params;\n  const forbidden = [\"resource\", \"total\", \"count\"];\n  Object.keys(data).forEach((prop) => {\n    if (forbidden.indexOf(prop) === -1) {\n      params[prop] = data[prop];\n    }\n  });\n  return params;\n};\n\nexport const sendReq = (httpMeth, url, data, opts = {}) => {\n  const params = filterParams(data);\n  const finalURL = httpMeth === \"GET\" ? `${url}?${toURIParams(params)}` : url;\n  const meta = document.querySelector(\"meta[name='csrf-token']\");\n  const req = new XMLHttpRequest();\n  req.withCredentials = opts.cookiesByCORS === true ? true : false;\n  req.open(httpMeth, finalURL);\n  req.setRequestHeader(\"Accept\", \"application/json\");\n  req.setRequestHeader(\"Content-Type\", \"application/json\");\n  if (meta) {\n    req.setRequestHeader(\"X-CSRF-Token\", meta.content);\n  }\n  if (opts.authorizationHeader != null) {\n    req.setRequestHeader(\"Authorization\", opts.authorizationHeader);\n  }\n  req.send(JSON.stringify(params));\n  return req;\n};\n\nexport default sendReq;\n","import Base from \"./base.coffee\";\n\nBase.prototype.clone = function () {\n  return new this.constructor({ ...this.attributes() });\n};\n\nconst Models = { Base };\n\nexport default Models;\n","import Config from \"./config\";\nimport I18n from \"./i18n\";\nimport IdentityMap from \"./IdentityMap\";\nimport Models from \"./models\";\nimport Validators from \"./validators\";\n\nconst connector = {\n  IdentityMap,\n  Models,\n};\n\nexport { Config, I18n, Models, Validators, connector };\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Configurator","_classCallCheck","this","localeVar","protocolWithHostVar","scopeVar","set","val","length","slice","en","variants","models","attributes","errors","messages","accepted","blank","confirmation","empty","equal_to","even","exclusion","greater_than","greater_than_or_equal_to","inclusion","invalid","less_than","less_than_or_equal_to","not_a_number","not_an_integer","odd","present","too_long","one","other","too_short","wrong_length","other_than","imap","addToImap","arr","indexOf","idx","find","element","index","findPosition","unsubscribe","identity","id","_imap","_imap$identity","_imap$identity$id","undefined","add","getIdentity","clear","subscribe","args","forExistingElement","_typeof","to","model","arguments","connect","with","opts","addCollection","klass","findConnected","attr","sharedInstances","instance","validatorName","sharedInstance","assignAttribs","validate","_addErrorMessage","message","addErrorMessage","for","properVal","_properAttr","defaultAttrName","charAt","toUpperCase","attrName","attrNames","replace","within","exec","_range","_selectErrorMessage","minimum","is","maximum","msg","i","_checkVariant","variant","isNaN","_addNaNErrorMessage","Number","parseInt","_addIntErrorMessage","_addGreatherThanErrorMessage","_addGreatherThanOrEqualToErrorMessage","_addEqualToErrorMessage","_addLessThanErrorMessage","_addLessThanOrEqualToErrorMessage","_addOtherThanErrorMessage","_addOddErrorMessage","_addEvenErrorMessage","Size","Absence","Base","Confirmation","Exclusion","Format","Inclusion","Length","Numericality","Presence","sendReq","httpMeth","url","data","str","params","forbidden","keys","forEach","filterParams","finalURL","concat","encodeURIComponent","meta","document","querySelector","req","XMLHttpRequest","withCredentials","cookiesByCORS","open","setRequestHeader","content","authorizationHeader","send","JSON","stringify","resource","constructor","__initAttributes","__assignAttributes","getRemoteName","remoteName","all","action","__send","post","put","patch","idOrObj","urlParams","__getResourcesUrl","__requestOpts","Promise","resolve","reject","onerror","e","onload","target","status","record","parse","response","__initFromJSON","getAttribRemoteName","attrib","getResourcesUrlParams","regexp","match","push","resourcesUrl","resources","toLowerCase","protocolWithHost","__page","pageData","resp","pageParam","method","Array","count","__paginate","pageNum","then","total","promise","perPage","max","func","_","__getPaginationParam","defaultParam","param","paginate","__getPaginationPer","per","page","IdentityMap","setResource","name","getAttrRemoteName","getAttrName","getAttrType","type","assignAttr","attrType","Date","parseFloat","Boolean","String","attribs","isValid","validations","validationSettings","on","validator","validationName","pvs","__processedValidationSettings","console","warn","isInvalid","isEmpty","save","__getResourceUrl","serialize","success","__assignRemoteErrorMessages","updateAttribute","hash","mainKey","reload","findParams","changes","result","currentObj","was","applyChanges","vals","toKey","remoteErrors","error","res","confName","confVal","_objectSpread","connector","Models"],"sourceRoot":""}